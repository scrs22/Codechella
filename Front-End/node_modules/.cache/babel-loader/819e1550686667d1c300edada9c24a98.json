{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shubham/Desktop/280/healthApp/healthcamp/src/components/Reports.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Card, Table } from \"react-bootstrap\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nvar db = openDatabase(\"healthcamp\", \"1.0\", \"My Web Sql\", 50 * 1024 * 1024);\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n\n    this.flushData = (res, ids) => {\n      axios.defaults.withCredentials = true;\n      let data = {\n        data: res\n      };\n      let self = this;\n      axios.post(\"http://localhost:3001/saveData\", data).then(response => {\n        console.log(\"Status Code : \", response.status);\n        let y = \"Y\";\n        let n = \"N\";\n        db.transaction(function (tx) {\n          tx.executeSql(\"update patients set status = ? where status = ?\", [y, n], function (tx, results) {\n            console.log(\"Results\", results);\n            alert(\"Data flushed to backend sucessfully!\"); // console.log('Data saved is' , this.state)\n          });\n        }); // bookAdded=true;\n      }).catch(response => {\n        console.log(\"error\", response);\n      });\n      window.alert(\"Data flushed to backend sucessfully!\");\n    };\n\n    this.syncData = () => {\n      window.alert(\"Data flushed to backend sucessfully!\");\n      let res = [];\n      let ids = [];\n      let self = this;\n      console.log(\"hre rin the transfer data backend\");\n      db.transaction(function (tx) {\n        console.log(\"Starts\");\n        tx.executeSql('SELECT * FROM patients where status=\"' + \"N\" + '\"', [], function (tx, results) {\n          console.log(\"Results here in the sunc\", results);\n\n          if (results.rows.length > 0) {\n            for (var i = 0; i < results.rows.length; i++) {\n              let res1 = [];\n              res1.push(results.rows.item(i).firstname, results.rows.item(i).lastname, results.rows.item(i).age, results.rows.item(i).gender, results.rows.item(i).notesFirst, results.rows.item(i).height, results.rows.item(i).weight, results.rows.item(i).temp, results.rows.item(i).pulse, results.rows.item(i).bp, results.rows.item(i).medications, results.rows.item(i).notes);\n              res.push(res1);\n              ids.push(results.rows.item(i).firstname);\n            }\n\n            console.log(\"Result herrere------------>\", res);\n            self.flushData(res, ids);\n          }\n        });\n      });\n    };\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.saveData = e => {\n      e.preventDefault();\n      console.log(\"Data saved is\", this.state);\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.usernameDisp.value = \"\";\n      this.pwdDisp.value = \"\";\n    };\n\n    this.state = {\n      entries: []\n    };\n  }\n\n  componentWillMount() {\n    let res = [];\n    let self = this;\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT firstname, lastname, age, image,  gender, medications, notes FROM patients\", [], function (tx, results) {\n        console.log(\"Results\", results);\n\n        if (results.rows.length > 0) {\n          for (var i = 0; i < results.rows.length; i++) {\n            res.push({\n              name: results.rows.item(i).firstname + results.rows.item(i).lastname,\n              age: results.rows.item(i).age,\n              gender: results.rows.item(i).gender,\n              image: results.rows.item(i).image,\n              medications: results.rows.item(i).medications,\n              notes: results.rows.item(i).notes\n            });\n          }\n        }\n\n        self.setState({\n          entries: res\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"100px\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: this.syncData,\n          children: [\"Sync Data \", /*#__PURE__*/_jsxDEV(BsArrowRepeat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"50px\",\n          marginRight: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Medications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.entries.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: el.image,\n                    height: \"200px\",\n                    width: \"200px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.medications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export Login Component\n\n\nexport default Reports;","map":{"version":3,"sources":["/Users/shubham/Desktop/280/healthApp/healthcamp/src/components/Reports.js"],"names":["React","Component","axios","Button","Card","Table","BsArrowRepeat","db","openDatabase","Reports","constructor","props","flushData","res","ids","defaults","withCredentials","data","self","post","then","response","console","log","status","y","n","transaction","tx","executeSql","results","alert","catch","window","syncData","rows","length","i","res1","push","item","firstname","lastname","age","gender","notesFirst","height","weight","temp","pulse","bp","medications","notes","usernameChangeHandler","e","setState","username","target","value","saveData","preventDefault","state","passwordChangeHandler","password","submitLogin","headers","Headers","usernameDisp","pwdDisp","entries","componentWillMount","name","image","render","display","flexDirection","marginTop","justifyContent","marginLeft","marginRight","map","el"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Card, Table } from \"react-bootstrap\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\n\nvar db = openDatabase(\"healthcamp\", \"1.0\", \"My Web Sql\", 50 * 1024 * 1024);\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n    };\n  }\n  componentWillMount() {\n    let res = [];\n    let self = this;\n    db.transaction(function (tx) {\n      tx.executeSql(\n        \"SELECT firstname, lastname, age, image,  gender, medications, notes FROM patients\",\n        [],\n        function (tx, results) {\n          console.log(\"Results\", results);\n          if (results.rows.length > 0) {\n            for (var i = 0; i < results.rows.length; i++) {\n              res.push({\n                name:\n                  results.rows.item(i).firstname +\n                  results.rows.item(i).lastname,\n                age: results.rows.item(i).age,\n                gender: results.rows.item(i).gender,\n                image: results.rows.item(i).image,\n                medications: results.rows.item(i).medications,\n                notes: results.rows.item(i).notes,\n              });\n            }\n          }\n          self.setState({\n            entries: res,\n          });\n        }\n      );\n    });\n  }\n\n  flushData = (res, ids) => {\n    axios.defaults.withCredentials = true;\n    let data = { data: res };\n\n    let self = this;\n\n    axios\n      .post(\"http://localhost:3001/saveData\", data)\n      .then((response) => {\n        console.log(\"Status Code : \", response.status);\n        let y = \"Y\";\n        let n = \"N\";\n        db.transaction(function (tx) {\n          tx.executeSql(\n            \"update patients set status = ? where status = ?\",\n            [y, n],\n            function (tx, results) {\n              console.log(\"Results\", results);\n              alert(\"Data flushed to backend sucessfully!\");\n              // console.log('Data saved is' , this.state)\n            }\n          );\n        });\n        // bookAdded=true;\n      })\n      .catch((response) => {\n        console.log(\"error\", response);\n      });\n    window.alert(\"Data flushed to backend sucessfully!\");\n  };\n\n  syncData = () => {\n    window.alert(\"Data flushed to backend sucessfully!\");\n    let res = [];\n    let ids = [];\n    let self = this;\n    console.log(\"hre rin the transfer data backend\");\n    db.transaction(function (tx) {\n      console.log(\"Starts\");\n      tx.executeSql(\n        'SELECT * FROM patients where status=\"' + \"N\" + '\"',\n        [],\n        function (tx, results) {\n          console.log(\"Results here in the sunc\", results);\n          if (results.rows.length > 0) {\n            for (var i = 0; i < results.rows.length; i++) {\n              let res1 = [];\n              res1.push(\n                results.rows.item(i).firstname,\n                results.rows.item(i).lastname,\n                results.rows.item(i).age,\n                results.rows.item(i).gender,\n                results.rows.item(i).notesFirst,\n                results.rows.item(i).height,\n                results.rows.item(i).weight,\n                results.rows.item(i).temp,\n                results.rows.item(i).pulse,\n                results.rows.item(i).bp,\n                results.rows.item(i).medications,\n                results.rows.item(i).notes\n              );\n              res.push(res1);\n              ids.push(results.rows.item(i).firstname);\n            }\n            console.log(\"Result herrere------------>\", res);\n            self.flushData(res, ids);\n          }\n        }\n      );\n    });\n  };\n  usernameChangeHandler = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  saveData = (e) => {\n    e.preventDefault();\n    console.log(\"Data saved is\", this.state);\n  };\n\n  passwordChangeHandler = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  submitLogin = (e) => {\n    var headers = new Headers();\n    //prevent page from refresh\n    e.preventDefault();\n    const data = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.usernameDisp.value = \"\";\n    this.pwdDisp.value = \"\";\n  };\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"100px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button variant=\"success\" onClick={this.syncData}>\n            Sync Data <BsArrowRepeat />\n          </Button>\n        </div>\n        <div\n          style={{ marginLeft: \"10px\", marginTop: \"50px\", marginRight: \"10px\" }}\n        >\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Age</th>\n                <th>Gender</th>\n                <th>Photo</th>\n                <th>Medications</th>\n                <th>Notes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.entries.map((el) => {\n                return (\n                  <tr>\n                    <td>{el.name}</td>\n                    <td>{el.age}</td>\n                    <td>{el.gender}</td>\n                    <td>\n                      <img src={el.image} height=\"200px\" width=\"200px\"></img>\n                    </td>\n                    <td>{el.medications}</td>\n                    <td>{el.notes}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n//export Login Component\nexport default Reports;\n"]},"metadata":{},"sourceType":"module"}