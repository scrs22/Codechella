{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shubham/Desktop/280/healthApp/healthcamp/src/components/Reports.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { Card, Table } from \"react-bootstrap\";\nvar db = openDatabase(\"healthcamp\", \"1.0\", \"My Web Sql\", 50 * 1024 * 1024);\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n\n    this.flushData = (res, ids) => {\n      axios.defaults.withCredentials = true;\n      console.log('Online pushing data to backend'); //  let fObj = this.props.location.state.firstPageDetails;\n\n      let data = {\n        data: res\n      };\n      console.log(\"Final Data to be sent to backend\", data);\n      console.log('Idfs are in', ids);\n      let self = this;\n      axios.post('http://localhost:3001/saveData', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n        let y = 'Y';\n        let n = 'N';\n        db.transaction(function (tx) {\n          tx.executeSql('update patients set status = ? where status = ?', [y, n], function (tx, results) {\n            console.log('Results', results);\n            toast.success(`Data synced successfully with backend`, {\n              position: \"top-center\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n            self.props.history.push('/reports', {}); // console.log('Data saved is' , this.state)\n          });\n        }); // bookAdded=true;  \n      }).catch(response => {\n        console.log(\"error\", response);\n      });\n    };\n\n    this.syncData = () => {\n      let res = [];\n      let ids = [];\n      let self = this;\n      console.log('hre rin the transfer data backend');\n      db.transaction(function (tx) {\n        console.log('Starts');\n        tx.executeSql('SELECT * FROM patients where status=\"' + 'N' + '\"', [], function (tx, results) {\n          console.log('Results here in the sunc', results);\n\n          if (results.rows.length > 0) {\n            for (var i = 0; i < results.rows.length; i++) {\n              let res1 = [];\n              res1.push(results.rows.item(i).firstname, results.rows.item(i).lastname, results.rows.item(i).age, results.rows.item(i).gender, results.rows.item(i).notesFirst, results.rows.item(i).height, results.rows.item(i).weight, results.rows.item(i).temp, results.rows.item(i).pulse, results.rows.item(i).bp, results.rows.item(i).medications, results.rows.item(i).notes);\n              res.push(res1);\n              ids.push(results.rows.item(i).firstname);\n            }\n\n            console.log(\"Result herrere------------>\", res);\n            self.flushData(res, ids);\n          }\n        });\n      });\n    };\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.saveData = e => {\n      e.preventDefault();\n      console.log(\"Data saved is\", this.state);\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.usernameDisp.value = \"\";\n      this.pwdDisp.value = \"\";\n    };\n\n    this.state = {\n      entries: []\n    };\n  }\n\n  componentWillMount() {\n    let res = [];\n    let self = this;\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT firstname, lastname, age, image,  gender, medications, notes FROM patients\", [], function (tx, results) {\n        console.log('Results', results);\n\n        if (results.rows.length > 0) {\n          for (var i = 0; i < results.rows.length; i++) {\n            res.push({\n              name: results.rows.item(i).firstname + results.rows.item(i).lastname,\n              age: results.rows.item(i).age,\n              gender: results.rows.item(i).gender,\n              image: results.rows.item(i).image,\n              medications: results.rows.item(i).medications,\n              notes: results.rows.item(i).notes\n            });\n          }\n        }\n\n        self.setState({\n          entries: res\n        });\n      });\n    });\n    console.log('This sql res', res);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: \"100px\",\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"10px\",\n          marginRight: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Medications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.entries.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: el.image,\n                    height: \"200px\",\n                    width: \"200px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.medications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export Login Component\n\n\nexport default Reports;","map":{"version":3,"sources":["/Users/shubham/Desktop/280/healthApp/healthcamp/src/components/Reports.js"],"names":["React","Component","axios","Redirect","Card","Table","db","openDatabase","Reports","constructor","props","flushData","res","ids","defaults","withCredentials","console","log","data","self","post","then","response","status","y","n","transaction","tx","executeSql","results","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","history","push","catch","syncData","rows","length","i","res1","item","firstname","lastname","age","gender","notesFirst","height","weight","temp","pulse","bp","medications","notes","usernameChangeHandler","e","setState","username","target","value","saveData","preventDefault","state","passwordChangeHandler","password","submitLogin","headers","Headers","usernameDisp","pwdDisp","entries","componentWillMount","name","image","render","display","marginTop","justifyContent","marginLeft","marginRight","map","el"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { Card, Table } from \"react-bootstrap\";\n\nvar db = openDatabase(\"healthcamp\", \"1.0\", \"My Web Sql\", 50 * 1024 * 1024);\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n    };\n  }\n  componentWillMount() {\n    let res = []\n    let self = this\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT firstname, lastname, age, image,  gender, medications, notes FROM patients\", [], function (\n        tx,\n        results\n      ) {\n        console.log('Results', results)\n        if (results.rows.length > 0) {\n          for (var i = 0; i < results.rows.length; i++) {\n            res.push({name:results.rows.item(i).firstname+results.rows.item(i).lastname,age:results.rows.item(i).age, gender: results.rows.item(i).gender, image: results.rows.item(i).image, medications:results.rows.item(i).medications, notes:results.rows.item(i).notes})\n          }\n        }\n        self.setState({\n            entries:res\n        })\n      });\n    });\n\n    console.log('This sql res', res)\n  }\n\n  flushData = (res,ids)=>{\n\n    axios.defaults.withCredentials = true;\n    console.log('Online pushing data to backend')\n  //  let fObj = this.props.location.state.firstPageDetails;\n    let data = {data:res}\n    console.log(\"Final Data to be sent to backend\", data)\n    console.log('Idfs are in', ids)\n  let self = this\n  \n        axios.post('http://localhost:3001/saveData',data)\n        .then(response => {            \n            console.log(\"Status Code : \",response.status);\n            let y= 'Y'\n            let n = 'N'\n            db.transaction(function (tx) {\n              tx.executeSql('update patients set status = ? where status = ?', [y,n], function (\n                tx,\n                results\n              ) {\n                console.log('Results', results)\n                toast.success(`Data synced successfully with backend`, {\n                  position: \"top-center\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n                self.props.history.push('/reports', {\n                })\n             // console.log('Data saved is' , this.state)\n              });\n            });\n            // bookAdded=true;  \n        })\n        .catch(response => {\n            console.log(\"error\", response)\n        })\n  }\n  \n  \n    syncData = ()=>{\n      let res=[]\n      let ids=[]\n      let self = this\n      console.log('hre rin the transfer data backend')\n      db.transaction(function (tx) {\n        console.log('Starts')\n        tx.executeSql('SELECT * FROM patients where status=\"'+'N'+'\"',[], function (\n          tx,\n          results\n        ) {\n          console.log('Results here in the sunc', results)\n          if (results.rows.length > 0) {\n            for (var i = 0; i < results.rows.length; i++) {\n              let res1=[]\n              res1.push(results.rows.item(i).firstname,results.rows.item(i).lastname,results.rows.item(i).age,results.rows.item(i).gender,results.rows.item(i).notesFirst,results.rows.item(i).height,results.rows.item(i).weight,results.rows.item(i).temp,results.rows.item(i).pulse,results.rows.item(i).bp, results.rows.item(i).medications, results.rows.item(i).notes)\n              res.push(res1)\n              ids.push(results.rows.item(i).firstname)\n            }\n            console.log(\"Result herrere------------>\", res)\n            self.flushData(res,ids)\n          }\n        });\n      });\n    }\n  usernameChangeHandler = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  saveData = (e) => {\n    e.preventDefault();\n    console.log(\"Data saved is\", this.state);\n  };\n\n  passwordChangeHandler = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  submitLogin = (e) => {\n    var headers = new Headers();\n    //prevent page from refresh\n    e.preventDefault();\n    const data = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.usernameDisp.value = \"\";\n    this.pwdDisp.value = \"\";\n  };\n  render() {\n    return (\n      <div style={{ display: \"flex\", marginTop: \"100px\" , justifyContent:'center'}}>\n        <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Age</th>\n                <th>Gender</th>\n                <th>Photo</th>\n                <th>Medications</th>\n                <th>Notes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.entries.map((el)=>{\n\n                    return (<tr>\n                        <td>{el.name}</td>\n                        <td>{el.age}</td>\n                        <td>{el.gender}</td>\n                        <td><img src={el.image} height='200px' width='200px'></img></td>\n                        <td>{el.medications}</td>\n                    <td>{el.notes}</td>\n                      </tr>)\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n//export Login Component\nexport default Reports;\n"]},"metadata":{},"sourceType":"module"}